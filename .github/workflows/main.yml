name: Main Foodgram workflow

on:
  push:
    branches:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0
    - name: Test with flake8
      run: python -m flake8 backend/ 
  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: tests
 
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      # Установка сборщика контейнеров Docker
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker 
      # Авторизация на Docker Hub
      uses: docker/login-action@v2
      # При помощи with передаём в action параметры username и password
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to DockerHub
      # Одновременный билд и пуш образа в Docker Hub
      uses: docker/build-push-action@v4
      with:
        # Параметр context: ./backend/ указывает, что нужный Dockerfile 
        # находится в ./backend/
        context: ./backend/
        # Параметр push: true указывает, что образ нужно не только собрать,
        # но и отправить на Docker Hub
        push: true
        # В параметре tags задаётся название и тег для образа.
        # Для каждого пересобранного образа 
        # устанавливаем тег latest, чтобы потом
        # на сервере и в docker-compose.yml не указывать версию
        tags: serhioth/foodgram_backend:latest 
  deploy:
    runs-on: ubuntu-latest
    needs: 
      # Дождёмся билда всех образов Taski
      - build_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    # Копируем docker-compose.production.yml на продакшен-сервер
    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
    # Передаём параметры для action appleboy/scp-action:
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "docker-compose.yml"
        target: "foodgram-project"
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        # Параметр script передаёт в action appleboy/ssh-action команды,
        # которые нужно выполнить на сервере, 
        # с которым установлено соединение
        script: |
          cd foodgram-project
          # Выполняет pull образов с Docker Hub
          sudo docker compose -f docker-compose.yml pull
          # Перезапускает все контейнеры в Docker Compose
          sudo docker compose -f docker-compose.yml down
          sudo docker compose -f docker-compose.yml up -d